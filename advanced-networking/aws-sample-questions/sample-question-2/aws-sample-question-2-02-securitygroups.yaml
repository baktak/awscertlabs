---
AWSTemplateFormatVersion: 2010-09-09

Description: Architecture to experiment with AWS Advanced Networking Certification Sample Question 2

Metadata: 

  Author:
    Description: Tom Kringstad (tkringstad@baktak.com)
  License:
    Use as you wish. No warranty offered - this is just being used to experiment with AWS. 

  Question: 
    Description: 
      Your application server instances reside in the private subnet of your VPC. These instances need to
      access a Git repository on the Internet. You create a NAT gateway in the public subnet of your VPC. The
      NAT gateway can reach the Git repository, but instances in the private subnet cannot. You confirm that a
      default route in the private subnet route table points to the NAT gateway. The security group for your
      application server instances permits all traffic to the NAT gateway.
      What configuration change should you make to ensure that these instances can reach the patch server?

  Answers:
    Description: 
       A) Assign public IP addresses to the instances and route 0.0.0.0/0 to the Internet gateway.
       B) Configure an outbound rule on the application server instance security group for the Git repository.
       C) Configure inbound network access control lists (network ACLs) to allow traffic from the Git repository to
          the public subnet.
       D) Configure an inbound rule on the application server instance security group for the Git repository.


  AWS::CloudFormation::Interface:

    ParameterGroups:
    - Label: 
        default: Amazon VPC Parameters
      Parameters: 
      - BastionAccessCidr
      - BastionAccessCidrDescription
      - Vpc
        
    ParameterLabels:
      Vpc:
        default: Vpc Id
      BastionAccessCidr:
        default: Allow SSH Access From
      BastionAccessCidrDescription:
        default: Description for Bastion Host Cidr Access
  
Parameters: 

  BastionAccessCidr: 
    Type: String
    Description: CIDR IP range that is permitted to connect to the Bastion Host using ssh. Note - leaving the default will allow access from anywhere.
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    Default: 0.0.0.0/0

  BastionAccessCidrDescription:
    Type: String
    Description: Provide an optional description for the Cidr range used for Bastion Host access
    Default: "Bastion Host Cidr Access"

  Vpc:
    Description: 'Vpc Id for an existing VPC'
    Type: AWS::EC2::VPC::Id

  
Resources:

  BastionHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join [ '', [ !Ref 'AWS::StackName', '-bastion-securitygroup' ] ]
      GroupDescription: 'Security group for the bastion host'
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: !Ref BastionAccessCidr
          FromPort: 22
          ToPort: 22
          Description: !Ref BastionAccessCidrDescription
      VpcId: !Ref Vpc
      Tags: 
        - Key: Name
          Value: !Join [ '', [ 'Bastion Security Group / ', !Ref 'AWS::StackName' ] ] 

Outputs:
    
  BastionHostSecurityGroup: 
    Value: !Ref BastionHostSecurityGroup


